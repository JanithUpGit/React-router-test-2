{"ast":null,"code":"var _jsxFileName = \"/Users/janith/devlopment/react/React-router-test-2/frontend/src/App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport { createBrowserRouter, RouterProvider } from 'react-router-dom';\nimport HomePage from './pages/Home';\nimport EventDetail from './pages/EventDetail';\nimport EventsPage from './pages/EventsPage';\nimport NewEvent from './pages/NewEvent';\nimport EditEvent from './pages/EditEvent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  index: true,\n  element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 24\n  }, this)\n}, {\n  path: '/events',\n  element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 28\n  }, this)\n}, {\n  path: '/events/:eventId',\n  element: /*#__PURE__*/_jsxDEV(EventDetail, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 37\n  }, this)\n}, {\n  path: '/events/new',\n  element: /*#__PURE__*/_jsxDEV(NewEvent, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 32\n  }, this)\n}, {\n  path: '/events/:eventId/edit',\n  element: /*#__PURE__*/_jsxDEV(EditEvent, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 43\n  }, this)\n}]);\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createBrowserRouter","RouterProvider","HomePage","EventDetail","EventsPage","NewEvent","EditEvent","jsxDEV","_jsxDEV","router","index","element","fileName","_jsxFileName","lineNumber","columnNumber","path","App","_c","$RefreshReg$"],"sources":["/Users/janith/devlopment/react/React-router-test-2/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport {createBrowserRouter,RouterProvider} from 'react-router-dom';\nimport HomePage from './pages/Home';\nimport EventDetail from './pages/EventDetail';\nimport EventsPage from './pages/EventsPage';\nimport NewEvent from './pages/NewEvent';\nimport EditEvent from './pages/EditEvent';\n\nconst router = createBrowserRouter([\n  \n  {index:true,element: <HomePage/>},\n  {path:'/events',element: <EventsPage/>},\n  {path:'/events/:eventId',element: <EventDetail/>},\n  {path:'/events/new',element: <NewEvent/>},\n  {path:'/events/:eventId/edit', element: <EditEvent/>}\n\n]);\nfunction App() {\n  return <RouterProvider router={router}/>;\n}\n\nexport default App;\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,mBAAmB,EAACC,cAAc,QAAO,kBAAkB;AACnE,OAAOC,QAAQ,MAAM,cAAc;AACnC,OAAOC,WAAW,MAAM,qBAAqB;AAC7C,OAAOC,UAAU,MAAM,oBAAoB;AAC3C,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,SAAS,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,MAAM,GAAGT,mBAAmB,CAAC,CAEjC;EAACU,KAAK,EAAC,IAAI;EAACC,OAAO,eAAEH,OAAA,CAACN,QAAQ;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC;AAAC,CAAC,EACjC;EAACC,IAAI,EAAC,SAAS;EAACL,OAAO,eAAEH,OAAA,CAACJ,UAAU;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC;AAAC,CAAC,EACvC;EAACC,IAAI,EAAC,kBAAkB;EAACL,OAAO,eAAEH,OAAA,CAACL,WAAW;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC;AAAC,CAAC,EACjD;EAACC,IAAI,EAAC,aAAa;EAACL,OAAO,eAAEH,OAAA,CAACH,QAAQ;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC;AAAC,CAAC,EACzC;EAACC,IAAI,EAAC,uBAAuB;EAAEL,OAAO,eAAEH,OAAA,CAACF,SAAS;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC;AAAC,CAAC,CAEtD,CAAC;AACF,SAASE,GAAGA,CAAA,EAAG;EACb,oBAAOT,OAAA,CAACP,cAAc;IAACQ,MAAM,EAAEA;EAAO;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAC1C;AAACG,EAAA,GAFQD,GAAG;AAIZ,eAAeA,GAAG;AAAC,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}