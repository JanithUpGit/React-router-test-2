{"ast":null,"code":"var _jsxFileName = \"/Users/janith/devlopment/react/React-router-test-2/frontend/src/pages/EventsPage.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData } from \"react-router-dom\";\nimport EventsList from \"../components/EventsList\";\nimport { json } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const data = useLoaderData();\n\n  //   if(data.isError){\n  //     return <p>{data.message}</p>\n  //   }\n\n  const events = data.events;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventsList, {\n      events: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nexport const eventsLoader = async () => {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    throw new Response(JSON.stringify({\n      message: \"Could not fetch events!\"\n    }), {\n      status: 500\n    });\n  } else {\n    return response.json(); // Return parsed JSON response\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","EventsList","json","jsxDEV","_jsxDEV","Fragment","_Fragment","EventsPage","_s","data","events","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","eventsLoader","response","fetch","ok","Response","JSON","stringify","message","status","$RefreshReg$"],"sources":["/Users/janith/devlopment/react/React-router-test-2/frontend/src/pages/EventsPage.js"],"sourcesContent":["import { useLoaderData} from \"react-router-dom\";\n\nimport EventsList from \"../components/EventsList\";\nimport { json } from \"react-router-dom\";\n\nfunction EventsPage() {\n  const data = useLoaderData();\n\n//   if(data.isError){\n//     return <p>{data.message}</p>\n//   }\n\n  const events = data.events; \n\n\n  return (\n    <>\n      <EventsList events={events} />\n    </>\n  );\n}\n\nexport default EventsPage;\n\n\nexport const eventsLoader = async () => {\n  const response = await fetch(\"http://localhost:8080/events\");\n\n  if (!response.ok) {\n    throw new Response(JSON.stringify({ message: \"Could not fetch events!\" }), { status: 500 });\n  } else {\n    return response.json(); // Return parsed JSON response\n  }\n};\n"],"mappings":";;AAAA,SAASA,aAAa,QAAO,kBAAkB;AAE/C,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,IAAI,GAAGT,aAAa,CAAC,CAAC;;EAE9B;EACA;EACA;;EAEE,MAAMU,MAAM,GAAGD,IAAI,CAACC,MAAM;EAG1B,oBACEN,OAAA,CAAAE,SAAA;IAAAK,QAAA,eACEP,OAAA,CAACH,UAAU;MAACS,MAAM,EAAEA;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBAC9B,CAAC;AAEP;AAACP,EAAA,CAfQD,UAAU;EAAA,QACJP,aAAa;AAAA;AAAAgB,EAAA,GADnBT,UAAU;AAiBnB,eAAeA,UAAU;AAGzB,OAAO,MAAMU,YAAY,GAAG,MAAAA,CAAA,KAAY;EACtC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAAC;MAAEC,OAAO,EAAE;IAA0B,CAAC,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EAC7F,CAAC,MAAM;IACL,OAAOP,QAAQ,CAAChB,IAAI,CAAC,CAAC,CAAC,CAAC;EAC1B;AACF,CAAC;AAAC,IAAAc,EAAA;AAAAU,YAAA,CAAAV,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}