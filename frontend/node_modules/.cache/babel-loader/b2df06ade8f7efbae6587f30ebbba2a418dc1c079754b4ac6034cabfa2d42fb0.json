{"ast":null,"code":"var _jsxFileName = \"/Users/janith/devlopment/react/React-router-test-2/frontend/src/pages/EventDetail.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventDetail() {\n  _s();\n  const data = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventDetail, {\n      event: data.event\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(EventDetail, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventDetail;\nexport default EventDetail;\nexport async function loader({\n  request,\n  params\n}) {\n  const id = params.eventId;\n  const response = await fetch('http://localhost:8080/events/' + id);\n  if (!response.ok) {\n    throw new Response(JSON.stringify({\n      message: \"Could not fetch details for selected event!\"\n    }), {\n      status: 500\n    });\n  } else {\n    return response.json();\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetail\");","map":{"version":3,"names":["useLoaderData","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetail","_s","data","children","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","request","params","id","eventId","response","fetch","ok","Response","JSON","stringify","message","status","json","$RefreshReg$"],"sources":["/Users/janith/devlopment/react/React-router-test-2/frontend/src/pages/EventDetail.js"],"sourcesContent":["import {useLoaderData, useParams } from \"react-router-dom\";\n\n\nfunction EventDetail(){\n\n    const data = useLoaderData();\n    return <>\n    \n    <EventDetail event={data.event}/>\n    \n    </>;\n    \n}\n\nexport default EventDetail;\n\n\nexport async function loader({request,params}){\n    const id = params.eventId;\n\n    const response = await fetch('http://localhost:8080/events/'+id);\n\n   if (!response.ok) {\n    throw new Response(JSON.stringify({ message: \"Could not fetch details for selected event!\" }), { status: 500 });\n  } else {\n    return response.json();\n  }\n}"],"mappings":";;AAAA,SAAQA,aAAa,EAAEC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAG3D,SAASC,WAAWA,CAAA,EAAE;EAAAC,EAAA;EAElB,MAAMC,IAAI,GAAGR,aAAa,CAAC,CAAC;EAC5B,oBAAOG,OAAA,CAAAE,SAAA;IAAAI,QAAA,eAEPN,OAAA,CAACG,WAAW;MAACI,KAAK,EAAEF,IAAI,CAACE;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC,gBAE/B,CAAC;AAEP;AAACP,EAAA,CATQD,WAAW;EAAA,QAEHN,aAAa;AAAA;AAAAe,EAAA,GAFrBT,WAAW;AAWpB,eAAeA,WAAW;AAG1B,OAAO,eAAeU,MAAMA,CAAC;EAACC,OAAO;EAACC;AAAM,CAAC,EAAC;EAC1C,MAAMC,EAAE,GAAGD,MAAM,CAACE,OAAO;EAEzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAACH,EAAE,CAAC;EAEjE,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IACjB,MAAM,IAAIC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAAC;MAAEC,OAAO,EAAE;IAA8C,CAAC,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EACjH,CAAC,MAAM;IACL,OAAOP,QAAQ,CAACQ,IAAI,CAAC,CAAC;EACxB;AACF;AAAC,IAAAd,EAAA;AAAAe,YAAA,CAAAf,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}