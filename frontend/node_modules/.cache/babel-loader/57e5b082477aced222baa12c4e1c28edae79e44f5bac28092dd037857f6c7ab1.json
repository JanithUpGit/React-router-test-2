{"ast":null,"code":"var _jsxFileName = \"/Users/janith/devlopment/react/React-router-test-2/frontend/src/App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport HomePage from \"./pages/Home\";\nimport EventDetail, { loader as eventDetailLoader } from \"./pages/EventDetail\";\nimport EventsPage, { eventsLoader } from \"./pages/EventsPage\";\nimport NewEvent from \"./pages/NewEvent\";\nimport EditEvent from \"./pages/EditEvent\";\nimport Root from \"./pages/Root\";\nimport EventsRootLayout from \"./pages/EventsRoot\";\nimport ErrorPage from \"./pages/Error\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: \"/\",\n  element: /*#__PURE__*/_jsxDEV(Root, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 14\n  }, this),\n  errorElement: /*#__PURE__*/_jsxDEV(ErrorPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 19\n  }, this),\n  children: [{\n    index: true,\n    element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 31\n    }, this)\n  }, {\n    path: \"/events\",\n    element: /*#__PURE__*/_jsxDEV(EventsRootLayout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 18\n    }, this),\n    children: [{\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 34\n      }, this),\n      loader: eventsLoader\n    }, {\n      path: \":eventId\",\n      id: 'event-detail',\n      element: /*#__PURE__*/_jsxDEV(EventDetail, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 22\n      }, this),\n      loader: eventDetailLoader\n    }, {\n      path: \"new\",\n      element: /*#__PURE__*/_jsxDEV(NewEvent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 35\n      }, this)\n    }, {\n      path: \":eventId/edit\",\n      element: /*#__PURE__*/_jsxDEV(EditEvent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 45\n      }, this)\n    }]\n  }]\n}]);\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createBrowserRouter","RouterProvider","HomePage","EventDetail","loader","eventDetailLoader","EventsPage","eventsLoader","NewEvent","EditEvent","Root","EventsRootLayout","ErrorPage","jsxDEV","_jsxDEV","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","errorElement","children","index","id","App","_c","$RefreshReg$"],"sources":["/Users/janith/devlopment/react/React-router-test-2/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport HomePage from \"./pages/Home\";\nimport EventDetail,{loader as eventDetailLoader} from \"./pages/EventDetail\";\nimport EventsPage,{ eventsLoader} from \"./pages/EventsPage\";\nimport NewEvent from \"./pages/NewEvent\";\nimport EditEvent from \"./pages/EditEvent\";\nimport Root from \"./pages/Root\";\nimport EventsRootLayout from \"./pages/EventsRoot\";\nimport ErrorPage from \"./pages/Error\";\n\nconst router = createBrowserRouter([\n  {\n    path: \"/\",\n    element: <Root />,\n    errorElement: <ErrorPage/>,\n    children: [\n      { index: true, element: <HomePage /> },\n      {\n        path: \"/events\",\n        element: <EventsRootLayout />,\n        children: [\n          { index: true,element: <EventsPage />,loader:eventsLoader},\n          { path: \":eventId\", \n            id:'event-detail',\n            element: <EventDetail/> ,\n            loader:eventDetailLoader},\n          { path: \"new\", element: <NewEvent /> },\n          { path: \":eventId/edit\", element: <EditEvent /> },\n        ],\n      },\n    ],\n  },\n]);\nfunction App() {\n  return <RouterProvider router={router} />;\n}\n\nexport default App;\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,mBAAmB,EAAEC,cAAc,QAAQ,kBAAkB;AACtE,OAAOC,QAAQ,MAAM,cAAc;AACnC,OAAOC,WAAW,IAAEC,MAAM,IAAIC,iBAAiB,QAAO,qBAAqB;AAC3E,OAAOC,UAAU,IAAGC,YAAY,QAAO,oBAAoB;AAC3D,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,SAAS,MAAM,mBAAmB;AACzC,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,SAAS,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,MAAM,GAAGf,mBAAmB,CAAC,CACjC;EACEgB,IAAI,EAAE,GAAG;EACTC,OAAO,eAAEH,OAAA,CAACJ,IAAI;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EACjBC,YAAY,eAAER,OAAA,CAACF,SAAS;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;EAC1BE,QAAQ,EAAE,CACR;IAAEC,KAAK,EAAE,IAAI;IAAEP,OAAO,eAAEH,OAAA,CAACZ,QAAQ;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE,CAAC,EACtC;IACEL,IAAI,EAAE,SAAS;IACfC,OAAO,eAAEH,OAAA,CAACH,gBAAgB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IAC7BE,QAAQ,EAAE,CACR;MAAEC,KAAK,EAAE,IAAI;MAACP,OAAO,eAAEH,OAAA,CAACR,UAAU;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;MAACjB,MAAM,EAACG;IAAY,CAAC,EAC1D;MAAES,IAAI,EAAE,UAAU;MAChBS,EAAE,EAAC,cAAc;MACjBR,OAAO,eAAEH,OAAA,CAACX,WAAW;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;MACvBjB,MAAM,EAACC;IAAiB,CAAC,EAC3B;MAAEW,IAAI,EAAE,KAAK;MAAEC,OAAO,eAAEH,OAAA,CAACN,QAAQ;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE,CAAC,EACtC;MAAEL,IAAI,EAAE,eAAe;MAAEC,OAAO,eAAEH,OAAA,CAACL,SAAS;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE,CAAC;EAErD,CAAC;AAEL,CAAC,CACF,CAAC;AACF,SAASK,GAAGA,CAAA,EAAG;EACb,oBAAOZ,OAAA,CAACb,cAAc;IAACc,MAAM,EAAEA;EAAO;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC3C;AAACM,EAAA,GAFQD,GAAG;AAIZ,eAAeA,GAAG;AAAC,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}